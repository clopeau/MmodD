// Copyright (C) 2010 - Thierry Clopeau
// Copyright (C) 2010 - Delanoue David
// Copyright (C) 2010 - Marcel Ndeffo
// Copyright (C) 2010 - Sofian Smatti
// 
// This file must be used under the term of the CeCILL
// http://www.cecill.info 


mprintf("Start MmodD\n");

if isdef("toolbox_mmodd") then
	warning("Toolbox MmodD is already loaded");
	return;
end

etc_tlbx  = get_absolute_file_path("MmodD.start");
etc_tlbx  = getshortpathname(etc_tlbx);
root_tlbx = strncpy( etc_tlbx, length(etc_tlbx)-length("\etc\") );

//Load  functions library
// =============================================================================
mprintf("\tLoad macros\n");
macrospath = pathconvert( root_tlbx ) + "macros" + filesep();

listfic=listfiles(macrospath);
%dir=[];
for ii=1:size(listfic,1)
  rep=listfic(ii,1);
  if(isdir(macrospath+rep))
    %dir($+1)=rep;
  end
end

num=size(%dir,1);
for ii=1:num
    str=macrospath+%dir(ii,1);
    execstr('mmodd_'+%dir(ii,1)+'_lib='+'lib('''+ str+'/'' )');
//    write(%io(2),'          - macros  '+%dir(ii,1)+' loaded');
end


// load gateways
// =============================================================================
mprintf("\tLoad gateways\n");
ilib_verbose(0);
//if ~MSDOS
   exec(pathconvert(root_tlbx+"/src/loader_src.sce",%f));
   exec(pathconvert(root_tlbx+"/sci_gateway/loader_gateway.sce",%f));
//end

// Load and add help chapter
// =============================================================================
if or(getscilabmode() == ["NW";"STD"]) then
	mprintf("\tLoad help\n");
	path_addchapter = pathconvert(root_tlbx+"/jar");
	if ( isdir(path_addchapter) <> [] ) then
		add_help_chapter("MmodD", path_addchapter, %F);
		clear add_help_chapter;
	end
	clear path_addchapter;
end


// Load demos
// =============================================================================
if or(getscilabmode() == ["NW";"STD"]) then
    mprintf("\tLoad demos\n");
    pathdemos = pathconvert(root_tlbx+"/demos/MmodD.dem.gateway.sce",%F,%T);
    add_demo("MmodD",pathdemos);
    clear pathdemos add_demo;
end

// menus additionnals
// =============================================================================
if getscilabmode() == ["STD"]
  %menupath=root_tlbx;
  //delmenu('toolboxes');
  //delmenu('Help');
  //delmenu('Demos');
  
  delmenu('Mesh')
  addmenu('Mesh',['New mesh';'View mesh';'Load mesh';'Export mesh']);
  //addmenu('Mesh',['Load mesh';'View mesh']);
  //delmenu('Editor')
  //addmenu("Editor",list(2,"editor"));
  //addmenu("Help",["Help browser","Apropos","Configure"],list(2,"help_menu"));
  Mesh(1)="exec("""+%menupath+"/menu/Mesh_New.sce"");";
  Mesh(3)="exec("""+%menupath+"/menu/Mesh_Load.sce"");";
  Mesh(2)="exec("""+%menupath+"/menu/Mesh_View.sce"");";
  Mesh(4)="exec("""+%menupath+"/menu/Mesh_Export.sce"");";
   delmenu('Variable');
//  addmenu('Variable',['New Var';'Load Var';'View Var';'Export Var';'Edit Var']);
//  
//  Variable(1)="exec "+%menupath+"/menu/Var_New.sce;";
//  Variable(2)="exec "+%menupath+"/menu/Var_load.sce;";
//  Variable(3)="exec("""+%menupath+"/menu/Var_View.sce"");";
//  Variable(4)="exec "+%menupath+"/menu/Var_Export.sce;";
//  Variable(5)="exec "+%menupath+"/menu/Var_Edit.sce;"; 
  
   delmenu('Edp')
   addmenu('Edp',['New edp';'Edit edp';'Export Edp';'Load edp']);
  
  Edp(1)="exec "+%menupath+"/menu/Var_New.sce;";
  Edp(4)="exec "+%menupath+"/menu/Edp_Load.sce;";
  //Edp(3)="exec("""+%menupath+"/menu/Var_View.sce"");";
  Edp(3)="exec "+%menupath+"/menu/Edp_Export.sce;";
  Edp(2)="exec "+%menupath+"/menu/Edp_Edit.sce;"; 
  
  
  delmenu('Post_Processing')
  
  addmenu('Post_Processing',['View solution'])
  Post_Processing(1)="exec("""+%menupath+"/menu/Var_View.sce"");";

end

// definition of global var %exclud (using in function name)
// =============================================================================

if ~isdef("%exclud")
    global %exclud;
    %exclud=who('get');
    %exclud=%exclud(length(%exclud)>2);
    %exclud=[%exclud;'%'];
end

// choice of OS and definition of global var %execpath
// =============================================================================

global %execpath;
if MSDOS
  %execpath=root_tlbx+"\Win32\";
else
  %os=unix_g('uname');
  if %os=="Linux"
    %execpath=root_tlbx+"/Linux64/";
  else 
    %execpath=root_tlbx+"/MacIntel32/";
  end
end

//clear root_tlbx;
//clear etc_tlbx;



