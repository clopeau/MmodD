// Copyright (C) 2010 - Thierry Clopeau
// Copyright (C) 2010 - Delanoue David
// Copyright (C) 2010 - Marcel Ndeffo
// Copyright (C) 2010 - Sofian Smatti
// 
// This file must be used under the term of the CeCILL
// http://www.cecill.info 


mprintf("Start MMODD\n");

if isdef("toolbox_mmodd") then
	warning("Toolbox MMODD is already loaded");
	return;
end

etc_tlbx  = get_absolute_file_path("mmodd.start");
etc_tlbx  = getshortpathname(etc_tlbx);
root_tlbx = strncpy( etc_tlbx, length(etc_tlbx)-length("\etc\") );

//Load  functions library
// =============================================================================
mprintf("\tLoad macros\n");
macrospath = pathconvert( root_tlbx ) + "macros" + filesep();

listfic=listfiles(macrospath);
%dir=[];
for i=1:size(listfic,1)
  rep=listfic(i,1);
  if(isdir(macrospath+rep))
    %dir($+1)=rep;
  end
end
//figw=220; figh=160;
//close(1)
//figure(1,"position",[0 0 figw figh]);
//htrig=uicontrol(1,"style","radiobutton","Min",0,"Max",1,"value",0,..
//                    "position",[80 10 20 20]);
//httrig=uititle(htrig,"free/trig","r")
winId=waitbar('MMoDD loading');
realtimeinit(0.3);
tk=with_tk();
num=size(%dir,1);
for i=1:num
  if ~(%dir(i,1)=="tk" & ~tk)
    str=macrospath+%dir(i,1);
    execstr('mmodd_'+%dir(i,1)+'_lib='+'lib('''+ str+'/'' )');
    realtime(3*i/num);
    waitbar(i/num,winId) ;
  end
  write(%io(2),'-------------------- '+%dir(i,1)+' loaded ---------------------');
end

xpause(1000);


//clear macrospath; ------> RENVOYER APRES LE CHARGEMENT DE L'AIDE 

// load gateways
// =============================================================================
mprintf("\tLoad gateways\n");
ilib_verbose(0);
if ~MSDOS
   exec(pathconvert(root_tlbx+"/src/loader_src.sce",%f));
   exec(pathconvert(root_tlbx+"/sci_gateway/loader_gateway.sce",%f));
end
// Load and add help chapter
// =============================================================================
if or(getscilabmode() == ["NW";"STD"]) then
	mprintf("\tLoad help\n");
	path_addchapter = pathconvert(root_tlbx+"/jar");
	if ( isdir(path_addchapter) <> [] ) then
		add_help_chapter("Toolbox skeleton", path_addchapter, %F);
		clear add_help_chapter;
	end
	clear path_addchapter;
end
//----------Modif Dav (PI ETRE A SUPPRIMER)-----------------
//help_dir = get_absolute_file_path('builder_help.sce');
//
//listfic = listfiles(macrospath);
////%dir=[];
//for i = 1:size(listfic,1)
//  rep = listfic(i,1);
//  if(isdir(macrospath+rep))
//    //%dir($+1) = rep;
//    execstr('help_from_sci('rep','help_dir')');
//  end
//end
//execstr('help_from_sci(macro_dir,)');



////winId=waitbar('MMoDD Help loading');
//realtimeinit(0.3);
//tk=with_tk();
//num=size(%dir,1);
//for i=1:num
//  if ~(%dir(i,1)=="tk" & ~tk)
//    //str=macrospath+%dir(i,1);
//    //execstr('mmodd_'+%dir(i,1)+'_lib='+'lib('''+ str+'/'' )');
//    execstr("help_from_sci("%dir(i,1)","root_tlbx"+"/help/"")");
//    realtime(3*i/num);
//    waitbar(i/num,winId) ;
//  end
//  write(%io(2),'-------------------- '+%dir(i,1)+'Help loaded ---------------------');
//end
//
//xpause(1000);




//----------FIN Modif Dav (PI ETRE A SUPPRIMER)-----------------
clear macrospath;

// Load demos
// =============================================================================
//if or(getscilabmode() == ["NW";"STD"]) then
//	mprintf("\tLoad demos\n");
//	pathdemos = pathconvert(root_tlbx+"/demos/toolbox_skeleton.dem.gateway.sce",%F,%T);
//	add_demo("Toolbox skeleton",pathdemos);
//	clear pathdemos add_demo;
//end

// menus additionnels
if and(sciargs()<>"-nw")
  %menupath=root_tlbx;
  //delmenu('toolboxes');
  //delmenu('Help');
  //delmenu('Demos');
  
  delmenu('Mesh')
  addmenu('Mesh',['New mesh';'View mesh';'Load mesh';'Export mesh']);
  //addmenu('Mesh',['Load mesh';'View mesh']);
  //delmenu('Editor')
  //addmenu("Editor",list(2,"editor"));
  //addmenu("Help",["Help browser","Apropos","Configure"],list(2,"help_menu"));
  Mesh(1)="exec("""+%menupath+"/menu/Mesh_New.sce"");";
  Mesh(3)="exec("""+%menupath+"/menu/Mesh_Load.sce"");";
  Mesh(2)="exec("""+%menupath+"/menu/Mesh_View.sce"");";
  Mesh(4)="exec("""+%menupath+"/menu/Mesh_Export.sce"");";
   delmenu('Variable');
//  addmenu('Variable',['New Var';'Load Var';'View Var';'Export Var';'Edit Var']);
//  
//  Variable(1)="exec "+%menupath+"/menu/Var_New.sce;";
//  Variable(2)="exec "+%menupath+"/menu/Var_load.sce;";
//  Variable(3)="exec("""+%menupath+"/menu/Var_View.sce"");";
//  Variable(4)="exec "+%menupath+"/menu/Var_Export.sce;";
//  Variable(5)="exec "+%menupath+"/menu/Var_Edit.sce;"; 
  
  delmenu('Edp')
   addmenu('Edp',['New edp';'Edit edp';'Export Edp';'Load edp']);
  
Edp(1)="exec "+%menupath+"/menu/Var_New.sce;";
  Edp(4)="exec "+%menupath+"/menu/Edp_Load.sce;";
  //Edp(3)="exec("""+%menupath+"/menu/Var_View.sce"");";
  Edp(3)="exec "+%menupath+"/menu/Edp_Export.sce;";
  Edp(2)="exec "+%menupath+"/menu/Edp_Edit.sce;"; 
  
  
  delmenu('Post_Processing')
  
  addmenu('Post_Processing',['View solution'])
   Post_Processing(1)="exec("""+%menupath+"/menu/Var_View.sce"");";
//  if ~(grep(SCI,"scilab-3")==1)
//     delmenu("Editor");
//     addmenu("Editor",['Range';'editor';]);
//    //Editor(1)="RangeSetting";
//    Editor(2)="xmesh()";
//  end
//addmenu("Help",["Help browser","Apropos","Configure"],list(2,"help_menu"));

end

// definition of global var %exclud (using in function name)
if ~isdef("%exclud")
    global %exclud;
    %exclud=who('get');
    %exclud=%exclud(length(%exclud)>2);
    %exclud=[%exclud;'%'];
end

// choice of OS and definition of global var %execpath
global %execpath;
if MSDOS
  %execpath=root_tlbx+"\Win32\";
else
  %os=unix_g('uname');
  if %os=="Linux"
    %execpath=root_tlbx+"/Linux64/";
  else 
    %execpath=root_tlbx+"/MacIntel32/";
  end
end

//clear root_tlbx;
//clear etc_tlbx;

close(winId);

