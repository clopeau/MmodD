<?xml version="1.0" encoding="UTF-8"?>
<!--
 * sources : plot2d.xml plot3d.xml
 * Copyright (C) INRIA
 * Copyright (C) 2009 - INRIA - Pierre Lando
 * Copyright (C) 2012 - Thierry Clopeau
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry version="5.0-subset Scilab" xml:id="tri3d_plot2d" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns4="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>tri3d_plot3d</refname>
    
    <refpurpose>Draw the triangular surface of tri3d mesh</refpurpose>
  </refnamediv>
  
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    
    <synopsis>
      tri3d_plot2d(th,[theta,alpha,leg,flag,ebox])
      tri3d_plot2d(th,&lt;opt_args&gt;)
    </synopsis>
  </refsynopsisdiv>
  
  <refsection>
    <title>Arguments</title>
    <variablelist>
      <varlistentry>
        <term>th</term>
        <listitem>
          <para>tri3d mesh.</para>
        </listitem>
      </varlistentry>
      
      <varlistentry>
        <term>&lt;opt_args&gt;</term>
	
        <listitem>
          <para>This represents a sequence of statements
            <literal>key1=value1,key2=value2</literal>,... where
            <literal>key1</literal>, <literal>key2,...</literal> can be one of
            the following:</para>
	  
          <variablelist>
	    <varlistentry>
              <term>edge="on" or "off"</term>
	      
              <listitem>
		<para>plot or not eges of the mesh</para>
              </listitem>
	    </varlistentry>

	    <varlistentry>
              <term>boundary="on" or "off"</term>
	      
              <listitem>
		<para>plot or not boundaries of the mesh</para>
              </listitem>
	    </varlistentry>

	    <varlistentry>
              <term>domain="on" or "off"</term>
	      
              <listitem>
		<para>plot or not different domains of the mesh</para>
              </listitem>
	    </varlistentry>

	    <varlistentry>
              <term>theta, alpha</term>
	      
              <listitem>
		<para>real values giving in degree the spherical coordinates of the
		  observation point.</para>
              </listitem>
	    </varlistentry>

	    <varlistentry>
              <term>leg</term>
	      
              <listitem>
		<para>string defining the labels for each axis with @ as a field
		  separator, for example "X@Y@Z".</para>
              </listitem>
	    </varlistentry>
	    
	    <varlistentry>
              <term>flag</term>
	      
              <listitem>
		<para>a real vector of size three.
		  <literal>flag=[mode,type,box]</literal>.</para>
		
		<variablelist>
		  <varlistentry>
		    <term>mode</term>
		    
		    <listitem>
                      <para>an integer (surface color).</para>
		      
                      <variablelist>
			<varlistentry>
			  <term>mode&gt;0</term>
			  
			  <listitem>
			    <para>the surface is painted with color
			      <literal>"mode"</literal> ; the boundary of the facet is
			      drawn with current line style and color.</para>
			  </listitem>
			</varlistentry>
			
			<varlistentry>
			  <term>mode=0:</term>
			  
			  <listitem>
			    <para>a mesh of the surface is drawn.</para>
			  </listitem>
			</varlistentry>
			
			<varlistentry>
			  <term>mode&lt;0:</term>
			  
			  <listitem>
			    <para>the surface is painted with color
			      <literal>"-mode"</literal> ; the boundary of the facet
			      is not drawn.</para>
			    
			    <para>Note that the surface color treatement can be done
			      using <literal>color_mode</literal> and
			      <literal>color_flag</literal> options through the
			      surface entity properties (see <literal>surface_properties</literal>).</para>
			  </listitem>
			</varlistentry>
                      </variablelist>
		    </listitem>
		  </varlistentry>
		  <varlistentry>
		    <term>type</term>
		    
		    <listitem>
                      <para>an integer (scaling).</para>
		      
                      <variablelist>
			<varlistentry>
			  <term>type=0:</term>
			  
			  <listitem>
			    <para>the plot is made using the current 3D scaling (set
			      by a previous call to <literal>param3d</literal>,
			      <literal>plot3d</literal>, <literal>contour</literal> or
			      <literal>plot3d1</literal>).</para>
			  </listitem>
			</varlistentry>
			
			<varlistentry>
			  <term>type=1:</term>
			  
			  <listitem>
			    <para>rescales automatically 3d boxes with extreme
			      aspect ratios, the boundaries are specified by the value
			      of the optional argument <literal>ebox</literal>.</para>
			  </listitem>
			</varlistentry>
			
			<varlistentry>
			  <term>type=2:</term>
			  
			  <listitem>
			    <para>rescales automatically 3d boxes with extreme
			      aspect ratios, the boundaries are computed using the
			      given data.</para>
			  </listitem>
			</varlistentry>
			
			<varlistentry>
			  <term>type=3:</term>
			  
			  <listitem>
			    <para>3d isometric with box bounds given by optional
			      <literal>ebox</literal>, similarily to
			      <literal>type=1</literal>.</para>
			  </listitem>
			</varlistentry>
			
			<varlistentry>
			  <term>type=4:</term>
			  
			  <listitem>
			    <para>3d isometric bounds derived from the data, to
			      similarily<literal>type=2</literal>.</para>
			  </listitem>
			</varlistentry>
			
			<varlistentry>
			  <term>type=5:</term>
			  
			  <listitem>
			    <para>3d expanded isometric bounds with box bounds given
			      by optional <literal>ebox</literal>, similarily to
			      <literal>type=1</literal>.</para>
			  </listitem>
			</varlistentry>
			
			<varlistentry>
			  <term>type=6:</term>
			  
			  <listitem>
			    <para>3d expanded isometric bounds derived from the
			      data, similarily to <literal>type=2</literal>.</para>
			    
			    <para>Note that axes boundaries can be customized
			      through the axes entity properties (see <literal>axes_properties</literal>).</para>
			  </listitem>
			</varlistentry>
                      </variablelist>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term>box</term>
		    
		    <listitem>
                      <para>an integer (frame around the plot).</para>
		      
                      <variablelist>
			<varlistentry>
			  <term>box=0:</term>
			  
			  <listitem>
			    <para>nothing is drawn around the plot.</para>
			  </listitem>
			</varlistentry>
			
			<varlistentry>
			  <term>box=1:</term>
			  
			  <listitem>
			    <para>unimplemented (like box=0).</para>
			  </listitem>
			</varlistentry>
			
			<varlistentry>
			  <term>box=2:</term>
			  
			  <listitem>
			    <para>only the axes behind the surface are drawn.</para>
			  </listitem>
			</varlistentry>
			
			<varlistentry>
			  <term>box=3:</term>
			  
			  <listitem>
			    <para>a box surrounding the surface is drawn and
			      captions are added.</para>
			  </listitem>
			</varlistentry>
			
			<varlistentry>
			  <term>box=4:</term>
			  
			  <listitem>
			    <para>a box surrounding the surface is drawn, captions
			      and axes are added.</para>
			    
			    <para>Note that axes aspect can also be customized
			      through the axes entity properties (see  <literal>surface_properties</literal>).</para>
			  </listitem>
			</varlistentry>
                      </variablelist>
		    </listitem>
		  </varlistentry>
		</variablelist>
              </listitem>
	    </varlistentry> 
	    <varlistentry>
              <term>ebox</term>
	      
              <listitem>
		<para>It specifies the boundaries of the plot as the vector
		  <literal>[xmin,xmax,ymin,ymax,zmin,zmax]</literal>. This argument is
		  used together with <literal>type</literal> in
		  <literal>flag</literal> : if it is set to <literal>1</literal>,
		  <literal>3</literal> or <literal>5</literal> (see above to see the
		  corresponding behaviour). If <literal>flag</literal> is missing,
		  <literal>ebox</literal> is not taken into acoount.</para>
		
		<para>Note that, when specified, the <literal>ebox</literal>
		  argument acts on the <literal>data_bounds</literal> field that can
		  also be reset through the axes entity properties (see  <literal>surface_properties</literal>).</para>
              </listitem>
	    </varlistentry>
	  </variablelist>
        </listitem>
      </varlistentry>
      
    </variablelist>
  </refsection>
  
  <refsection>
    <title>Description</title>

    <para><literal>tri3d_plot2d(th)</literal> draw the triangular
     mesh and boundaries colored by domains and mondaries values</para>

  </refsection>

  <refsection>
    <title>Examples</title>
    <para>Without edges</para>
    <programlisting role="example"><![CDATA[ 
scf()
th=square2d(20,20) \\th is a tri2d mesh
u=p1(th,['x','x*y','x-y'])
th=th+[0,0,0] \\ transforme th in tri3d mesh
th.Coor=u.Node \\ change points coordinates
tri3d_plot3d(th,alpha=63,theta=-118)
 ]]></programlisting>

 <para>The result of the preceding example:</para>

    <mediaobject>
      <imageobject>
        <imagedata align="center" fileref="../../Pictures/tri3d_plot2d_1.png" />
      </imageobject>
    </mediaobject>

<para>With edges, boundaries, without domains </para>
    <programlisting role="example"><![CDATA[ 
scf()
th=read_tri2d_NETGEN(mmodd_getpath()+"/demos/2d/Mesh_example/geom_potelec2d.vol")
th.Coor=[th.Coor(:,1) zeros(th.Coor(:,1)) th.Coor(:,2)];
tri3d_plot3d(th,domain="off")
 ]]></programlisting>
</refsection>

 <para>The result of the preceding example:</para>

    <mediaobject>
      <imageobject>
        <imagedata align="center" fileref="../../Pictures/tri3d_plot2d_2.png" />
      </imageobject>
    </mediaobject>


  <refsection role="see also">
<title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="meshtool">meshtool</link></member>
      <member><link linkend="vartool">vartool</link></member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>

    <para>T.C.</para>
  </refsection>
</refentry>
